import { useEffect } from "react";
import { useProjectState } from "../../contexts/useProjectState";
import { useSelector } from "react-redux";
import { useParams } from "react-router-dom";
import { useProjectData } from "../../services/queries/projects";
import FinanceReport from "../../components/FinanceReport";
import { useFinanceState } from "../../contexts/useFinanceState";

const FinancePage = () => {
  const { selectedProject, setSelectedProject } = useProjectState();
  const { userInfo: user } = useSelector((state) => state.user);
  const { projectId } = useParams();

  const { data: projectData } = useProjectData({
    projectId,
    token: user?.token,
  });

  useEffect(() => {
    if (!selectedProject) {
      setSelectedProject(projectData);
    }
  }, [projectData, setSelectedProject, selectedProject]);

  const {
    systemSize,
    setSystemSize,
    annualDegradation,
    setAnnualDegradation,
    tariff,
    setTariff,
    tariffEscalation,
    setTariffEscalation,
    subsidyAmount,
    setSubsidyAmount,
    loan,
    setLoan,
    interestRate,
    setInterestRate,
    loanDuration,
    setLoanDuration,
    showFinanceReport,
    setShowFinanceReport,
    installationCost,
    setInstallationCost,
    systemTerm,
    setSystemTerm,
    maintenanceCost,
    setMaintenanceCost,
    yearlyUnitGenerated,
    setYearlyUnitGenerated,
  } = useFinanceState();

  const handleFormSubmit = (e) => {
    e.preventDefault();
    setShowFinanceReport(true);
  };

  return (
    <div className="print:mt-[500px]">
      <div className="bg-dark-soft text-white p-6 rounded-lg w-full mb-8">
        <h1 className="text-2xl font-bold">Cost and Saving Estimation</h1>
        <form onSubmit={handleFormSubmit} className="text-gray-100">
          <p className="py-3">
            <span className="font-bold">Project Name : </span>{" "}
            {selectedProject?.name}
          </p>

          <div className="grid grid-cols-2 gap-6">
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="solarSize">
                Solar System Size (kW):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter solar system size in kW"
                name="solarSize"
                id="solarSize"
                value={systemSize}
                onChange={(e) => {
                  setSystemSize(e.target.value);
                  setInstallationCost(Number(e.target.value) * 50000);
                  setMaintenanceCost(Number(e.target.value) * 1500);
                  setYearlyUnitGenerated(Number(e.target.value) * 1600);
                }}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label
                className="text-lg font-semibold"
                htmlFor="yearlyGeneratedUnits"
              >
                Yearly Generated Units (kWh):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter yearly units generated by system in KWh"
                name="yearlyGeneratedUnits"
                id="yearlyGeneratedUnits"
                value={yearlyUnitGenerated}
                onChange={(e) => setYearlyUnitGenerated(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label
                className="text-lg font-semibold"
                htmlFor="installationCost"
              >
                Total Installation Cost (Rs.):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter total installation cost in Rs."
                name="installationCost"
                id="installationCost"
                value={installationCost}
                onChange={(e) => setInstallationCost(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="degradation">
                Annual Degradation (%):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter annual degradation in %"
                value={annualDegradation}
                name="degradation"
                id="degradation"
                onChange={(e) => setAnnualDegradation(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="systemTerm">
                System Term (years):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter system term in years"
                value={systemTerm}
                name="systemTerm"
                id="systemTerm"
                onChange={(e) => setSystemTerm(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label
                className="text-lg font-semibold"
                htmlFor="maintenanceCost"
              >
                Maintenance Cost (Rs./year):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter maintenance cost in Rs./year"
                value={maintenanceCost}
                name="maintenanceCost"
                id="maintenanceCost"
                onChange={(e) => setMaintenanceCost(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="tariff">
                Tariff (Rs/kWh):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter tariff in Rs/kWh"
                defaultValue={tariff}
                name="tariff"
                id="tariff"
                onChange={(e) => setTariff(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="escalation">
                Tariff Escalation (%):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter tariff escalation in %"
                defaultValue={tariffEscalation}
                name="escalation"
                id="escalation"
                onChange={(e) => setTariffEscalation(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="subsidy">
                Subsidy Amount (Rs.):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter subsidy amount in Rs"
                defaultValue={subsidyAmount}
                name="subsidy"
                id="subsidy"
                onChange={(e) => setSubsidyAmount(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="loan">
                Loan:
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter total loan amount in Rs"
                defaultValue={loan}
                name="loan"
                id="loan"
                onChange={(e) => setLoan(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="interestRate">
                Interest Rate (%):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter interest rate in %"
                defaultValue={interestRate}
                name="interestRate"
                id="interestRate"
                onChange={(e) => setInterestRate(e.target.value)}
              />
            </div>
            <div className="flex flex-col gap-1">
              <label className="text-lg font-semibold" htmlFor="loanDuration">
                Loan Duration (months):
              </label>
              <input
                className="p-3 outline-none rounded-md text-gray-900"
                type="text"
                placeholder="Enter loan duration in months"
                defaultValue={loanDuration}
                name="loanDuration"
                id="loanDuration"
                onChange={(e) => setLoanDuration(e.target.value)}
              />
            </div>
          </div>
          <div className="flex flex-col gap-1 mt-6">
            <button
              type="submit"
              disabled={!systemSize}
              className="bg-light-hard w-fit text-white py-3 px-6 rounded-md disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Calculate
            </button>
          </div>
        </form>
      </div>
      {showFinanceReport && (
        <FinanceReport
          data={{
            systemSize: Number(systemSize),
            yearlyUnitGenerated: Number(yearlyUnitGenerated),
            installationCost: Number(installationCost),
            annualDegradation: Number(annualDegradation),
            systemTerm: Number(systemTerm),
            maintenanceCost: Number(maintenanceCost),
            tariff: Number(tariff),
            tariffEscalation: Number(tariffEscalation),
            subsidyAmount: Number(subsidyAmount),
            loan: Number(loan),
            interestRate: Number(interestRate),
            loanDuration: Number(loanDuration),
          }}
        />
      )}
    </div>
  );
};

export default FinancePage;
